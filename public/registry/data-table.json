{
  "name": "data-table",
  "type": "registry:ui",
  "files": [
    {
      "path": "components/keerui/data-table.tsx",
      "content": "\"use client\";\n\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport { motion } from \"motion/react\";\nimport { useTheme } from \"next-themes\";\nimport { Search, ChevronLeft, ChevronRight, Eye, Edit, Trash2 } from \"lucide-react\";\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n  role: string;\n  status: \"Active\" | \"Inactive\" | \"Pending\";\n  joinDate: string;\n  initials: string;\n}\n\nconst sampleData: User[] = [\n  { id: 1, name: \"John Doe\", email: \"john.doe@example.com\", role: \"Admin\", status: \"Active\", joinDate: \"2024-01-15\", initials: \"JD\" },\n  { id: 2, name: \"Sarah Wilson\", email: \"sarah.wilson@example.com\", role: \"Editor\", status: \"Active\", joinDate: \"2024-02-20\", initials: \"SW\" },\n  { id: 3, name: \"Mike Johnson\", email: \"mike.johnson@example.com\", role: \"User\", status: \"Inactive\", joinDate: \"2024-01-10\", initials: \"MJ\" },\n  { id: 4, name: \"Emily Davis\", email: \"emily.davis@example.com\", role: \"Editor\", status: \"Pending\", joinDate: \"2024-03-05\", initials: \"ED\" },\n  { id: 5, name: \"Alex Chen\", email: \"alex.chen@example.com\", role: \"User\", status: \"Active\", joinDate: \"2024-02-28\", initials: \"AC\" }\n];\n\nconst getAvatarColor = (name: string) => {\n  const colors = [\n    'bg-blue-500', 'bg-green-500', 'bg-purple-500', 'bg-pink-500', 'bg-indigo-500',\n    'bg-red-500', 'bg-yellow-500', 'bg-teal-500', 'bg-orange-500', 'bg-cyan-500'\n  ];\n  const index = name.charCodeAt(0) % colors.length;\n  return colors[index];\n};\n\nexport default function DataTable({ data = sampleData, itemsPerPage = 5 }: { data?: User[]; itemsPerPage?: number }) {\n  const { theme, resolvedTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const filteredData = useMemo(() => {\n    return sampleData.filter(user => \n      user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      user.email.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  }, [searchTerm]);\n\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const paginatedData = filteredData.slice(startIndex, startIndex + itemsPerPage);\n\n  const isDark = theme === 'dark';\n\n  return (\n    <div\n      className={cn(\n        \"relative overflow-hidden\",\n        \"h-[30rem] w-full max-w-[400px]\",\n        \"rounded-md border border-neutral-800 bg-neutral-950\",\n      )}\n    >\n      <motion.div \n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"h-full flex flex-col\"\n      >\n        {/* Search */}\n        <div className=\"p-3 border-b border-neutral-800\">\n          <div className=\"relative\">\n            <Search className=\"absolute left-2 top-1/2 transform -translate-y-1/2 w-3 h-3 text-neutral-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search users...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-7 pr-3 py-1.5 text-xs rounded-md border bg-neutral-900 border-neutral-700 text-neutral-100 placeholder-neutral-500 focus:outline-none focus:ring-1 focus:ring-cyan-500\"\n            />\n          </div>\n        </div>\n\n        {/* Table */}\n        <div className=\"flex-1 overflow-hidden\">\n          <div className=\"h-full overflow-y-auto\">\n            <table className=\"w-full text-xs\">\n              <thead className=\"bg-neutral-900 sticky top-0\">\n                <tr>\n                  <th className=\"px-3 py-2 text-left font-medium text-neutral-300\">User</th>\n                  <th className=\"px-3 py-2 text-left font-medium text-neutral-300\">Status</th>\n                  <th className=\"px-3 py-2 text-left font-medium text-neutral-300\">Actions</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-neutral-800\">\n                {paginatedData.map((user, index) => (\n                  <motion.tr \n                    key={user.id}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    transition={{ delay: index * 0.1 }}\n                    whileHover={{ backgroundColor: 'rgb(23 23 23)' }}\n                    className=\"transition-colors\"\n                  >\n                    <td className=\"px-3 py-2\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Image \n                          className=\"h-6 w-6 rounded-full\" \n                          src={user.avatar} \n                          alt={user.name} \n                          width={24} \n                          height={24} \n                        />\n                        <div>\n                          <div className=\"font-medium text-neutral-100 text-xs\">{user.name}</div>\n                          <div className=\"text-neutral-400 text-xs truncate max-w-[120px]\">{user.email}</div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-3 py-2\">\n                      <motion.span \n                        initial={{ scale: 0.8 }}\n                        animate={{ scale: 1 }}\n                        className={`inline-flex px-2 py-0.5 text-xs font-semibold rounded-full ${\n                          user.status === 'Active' ? 'bg-green-900 text-green-300' :\n                          user.status === 'Inactive' ? 'bg-red-900 text-red-300' :\n                          'bg-yellow-900 text-yellow-300'\n                        }`}\n                      >\n                        {user.status}\n                      </motion.span>\n                    </td>\n                    <td className=\"px-3 py-2\">\n                      <div className=\"flex space-x-1\">\n                        <motion.button \n                          whileHover={{ scale: 1.1 }}\n                          whileTap={{ scale: 0.9 }}\n                          className=\"p-1 rounded text-neutral-400 hover:text-neutral-200 hover:bg-neutral-800\"\n                        >\n                          <Eye className=\"w-3 h-3\" />\n                        </motion.button>\n                        <motion.button \n                          whileHover={{ scale: 1.1 }}\n                          whileTap={{ scale: 0.9 }}\n                          className=\"p-1 rounded text-neutral-400 hover:text-neutral-200 hover:bg-neutral-800\"\n                        >\n                          <Edit className=\"w-3 h-3\" />\n                        </motion.button>\n                        <motion.button \n                          whileHover={{ scale: 1.1 }}\n                          whileTap={{ scale: 0.9 }}\n                          className=\"p-1 rounded text-neutral-400 hover:text-red-400 hover:bg-neutral-800\"\n                        >\n                          <Trash2 className=\"w-3 h-3\" />\n                        </motion.button>\n                      </div>\n                    </td>\n                  </motion.tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Pagination */}\n        <div className=\"px-3 py-2 border-t border-neutral-800 bg-neutral-900\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"text-xs text-neutral-400\">\n              {startIndex + 1}-{Math.min(startIndex + itemsPerPage, filteredData.length)} of {filteredData.length}\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <motion.button\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                disabled={currentPage === 1}\n                className=\"flex items-center gap-1 px-2 py-1 text-xs rounded disabled:opacity-50 text-neutral-300 border border-neutral-700 hover:bg-neutral-800 disabled:hover:bg-transparent\"\n              >\n                <ChevronLeft className=\"w-3 h-3\" />\n              </motion.button>\n              <span className=\"text-xs text-neutral-400 px-2\">{currentPage}</span>\n              <motion.button\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n                disabled={currentPage === totalPages}\n                className=\"flex items-center gap-1 px-2 py-1 text-xs rounded disabled:opacity-50 text-neutral-300 border border-neutral-700 hover:bg-neutral-800 disabled:hover:bg-transparent\"\n              >\n                <ChevronRight className=\"w-3 h-3\" />\n              </motion.button>\n            </div>\n          </div>\n        </div>\n      </motion.div>\n\n      {/* Card Info */}\n      <div className=\"absolute bottom-5 left-0 w-full px-3\">\n        <h3 className=\"text-sm font-semibold text-neutral-100\">\n          {cardTitle}\n        </h3>\n        <p className=\"mt-2 text-xs text-neutral-400\">{cardDescription}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default DataTable;",
      "type": "registry:ui",
      "target": "components/keerui/data-table.tsx"
    }
  ],
  "author": "venkatateja <hi@venkatateja.dev>",
  "title": "Data Table"
}
